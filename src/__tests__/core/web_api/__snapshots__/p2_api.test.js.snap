// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`APIClient logIn with social/enterprise (without username and email) should call popup.authorize when redirect===false 1`] = `
Object {
  "nonce": undefined,
  "owp": true,
  "popupOptions": undefined,
  "scope": undefined,
  "state": undefined,
}
`;

exports[`AuthokAPIClient getSSOData should call client.client.getSSOData 1`] = `
Array [
  true,
  [Function],
]
`;

exports[`AuthokAPIClient getUserCountry should call getUserCountry 1`] = `
Array [
  "cb",
]
`;

exports[`AuthokAPIClient init with overrides always uses telemetry set in the \`authokClient\` query param and inside the ULP 1`] = `
Object {
  "env": Object {
    "authok.js-ulp": "a0js.version",
    "envOverride": true,
    "lock.js-ulp": "lock.version",
  },
  "name": "test-sdk",
  "version": "1.0.0",
}
`;

exports[`AuthokAPIClient init with overrides forwards options to WebAuth 1`] = `
Object {
  "_sendTelemetry": true,
  "_telemetryInfo": Object {
    "env": Object {
      "authok.js": "a0js.version",
    },
    "name": "lock.js",
    "version": "lock.version",
  },
  "audience": "foo",
  "clientID": "cid",
  "domain": "me.authok.com",
  "leeway": 30,
  "nonce": "nonce",
  "overrides": Object {
    "__jwks_uri": "https://jwks.com",
    "__tenant": "tenant1",
    "__token_issuer": "issuer1",
  },
  "plugins": Array [
    Object {
      "name": "ExamplePlugin",
    },
  ],
  "redirectUri": "//localhost:8080/login/callback",
  "responseMode": "query",
  "responseType": "code",
  "scope": "custom_scope",
  "state": "state",
}
`;

exports[`AuthokAPIClient init with overrides forwards options to WebAuth with a default leeway 1`] = `
Object {
  "_sendTelemetry": true,
  "_telemetryInfo": Object {
    "env": Object {
      "authok.js": "a0js.version",
    },
    "name": "lock.js",
    "version": "lock.version",
  },
  "audience": "foo",
  "clientID": "cid",
  "domain": "me.authok.com",
  "leeway": 60,
  "nonce": "nonce",
  "overrides": Object {
    "__jwks_uri": "https://jwks.com",
    "__tenant": "tenant1",
    "__token_issuer": "issuer1",
  },
  "plugins": Array [
    Object {
      "name": "ExamplePlugin",
    },
  ],
  "redirectUri": "//localhost:8080/login/callback",
  "responseMode": "query",
  "responseType": "code",
  "scope": "custom_scope",
  "state": "state",
}
`;

exports[`AuthokAPIClient init with overrides overrides telemetry when outside the ULP 1`] = `
Object {
  "env": Object {
    "authok.js": "a0js.version",
    "envOverride": true,
    "lock.js": "lock.version",
  },
  "name": "test-sdk",
  "version": "1.0.0",
}
`;

exports[`AuthokAPIClient logIn should trim spaces in the email 1`] = `
Object {
  "email": "foo@example.com",
  "nonce": undefined,
  "popupOptions": undefined,
  "realm": undefined,
  "scope": undefined,
  "state": undefined,
}
`;

exports[`AuthokAPIClient logIn should trim spaces in the mfa_code 1`] = `
Object {
  "mfa_code": "123456",
  "nonce": undefined,
  "popupOptions": undefined,
  "realm": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo",
}
`;

exports[`AuthokAPIClient logIn should trim spaces in the username 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "realm": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo",
}
`;

exports[`AuthokAPIClient logIn should trim spaces in the username with a space 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "realm": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo bar",
}
`;

exports[`AuthokAPIClient logIn with credentials should call client.login 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "realm": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo",
}
`;

exports[`AuthokAPIClient logIn with credentials should call popup.loginWithCredentials when redirect is false and sso is false 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo",
}
`;

exports[`AuthokAPIClient logIn with credentials should call popup.loginWithCredentials when redirect is false and sso is true 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "scope": undefined,
  "state": undefined,
  "username": "foo",
}
`;

exports[`AuthokAPIClient logIn with social/enterprise (without username and email) should call authorize when redirect===true 1`] = `
Object {
  "nonce": undefined,
  "popupOptions": undefined,
  "scope": undefined,
  "state": undefined,
}
`;

exports[`AuthokAPIClient parseHash should pass __enableIdPInitiatedLogin when options._enableIdPInitiatedLogin===true 1`] = `
Array [
  Object {
    "__enableIdPInitiatedLogin": true,
    "hash": "hash",
    "nonce": undefined,
    "state": undefined,
  },
  "cb",
]
`;

exports[`AuthokAPIClient parseHash should pass __enableIdPInitiatedLogin when options._enableImpersonation===true 1`] = `
Array [
  Object {
    "__enableIdPInitiatedLogin": true,
    "hash": "hash",
    "nonce": undefined,
    "state": undefined,
  },
  "cb",
]
`;

exports[`AuthokAPIClient parseHash should pass __enableIdPInitiatedLogin:false when options._enableImpersonation and options._enableIdPInitiatedLogin are not present 1`] = `
Array [
  Object {
    "__enableIdPInitiatedLogin": false,
    "hash": "hash",
    "nonce": undefined,
    "state": undefined,
  },
  "cb",
]
`;

exports[`AuthokAPIClient passwordlessStart should call client.passwordlessStart 1`] = `
Array [
  Object {
    "foo": "bar",
  },
  [Function],
]
`;

exports[`AuthokAPIClient passwordlessStart should trim spaces in the email 1`] = `
Object {
  "email": "foo@example.com",
}
`;

exports[`AuthokAPIClient passwordlessStart should trim spaces in the phoneNumber 1`] = `
Object {
  "phoneNumber": "+554899999",
}
`;

exports[`AuthokAPIClient passwordlessVerify should call client.passwordlessLogin 1`] = `
Array [
  Object {
    "foo": "bar",
    "popup": true,
  },
  [Function],
]
`;

exports[`AuthokAPIClient passwordlessVerify should trim spaces in the email 1`] = `
Object {
  "email": " foo@example.com ",
  "popup": false,
}
`;

exports[`AuthokAPIClient passwordlessVerify should trim spaces in the phoneNumber 1`] = `
Object {
  "phoneNumber": " +554899999 ",
  "popup": false,
}
`;

exports[`AuthokAPIClient resetPassword should trim spaces in the email 1`] = `
Object {
  "email": "foo@example.com",
}
`;

exports[`AuthokAPIClient resetPassword should trim spaces in the username 1`] = `
Object {
  "username": "foo",
}
`;

exports[`AuthokAPIClient resetPassword should trim spaces in the username with a space 1`] = `
Object {
  "username": "foo bar",
}
`;

exports[`AuthokAPIClient signUp should trim spaces in the email 1`] = `
Object {
  "email": "foo@example.com",
}
`;

exports[`AuthokAPIClient signUp should trim spaces in the username 1`] = `
Object {
  "username": "foo",
}
`;

exports[`AuthokAPIClient signUp should trim spaces in the username with a space 1`] = `
Object {
  "username": "foo bar",
}
`;
